/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface CcInweb {
    /**
    * Show conditional thank you message based on the response
    */
    'conditionalThankYou': {
      yes: string;
      no: string;
    };
    /**
    * Use Custom key for managing throttling
    */
    'cookieId': string;
    /**
    * Opt out of sending response to server. Handle in event hooks
    */
    'doNotPost': boolean;
    /**
    * Optionaly hide the survey after submission
    */
    'hideAfterSubmission': boolean;
    /**
    * Use icons or text based options
    */
    'icons': "show" | "hide";
    /**
    * prefills
    */
    'prefills': any;
    /**
    * Question text that will be shown to the user
    */
    'question': string;
    /**
    * Question-Id to post responses for
    */
    'questionId': string;
    /**
    * Configure throttling duration
    */
    'throttleForDays': number;
    /**
    * token to submit responses
    */
    'token': string;
  }
  interface CcInwebAttributes extends StencilHTMLAttributes {
    /**
    * Show conditional thank you message based on the response
    */
    'conditionalThankYou'?: {
      yes: string;
      no: string;
    };
    /**
    * Use Custom key for managing throttling
    */
    'cookieId'?: string;
    /**
    * Opt out of sending response to server. Handle in event hooks
    */
    'doNotPost'?: boolean;
    /**
    * Optionaly hide the survey after submission
    */
    'hideAfterSubmission'?: boolean;
    /**
    * Use icons or text based options
    */
    'icons'?: "show" | "hide";
    'onCc-inweb-response'?: (event: CustomEvent) => void;
    /**
    * prefills
    */
    'prefills'?: any;
    /**
    * Question text that will be shown to the user
    */
    'question'?: string;
    /**
    * Question-Id to post responses for
    */
    'questionId'?: string;
    /**
    * Configure throttling duration
    */
    'throttleForDays'?: number;
    /**
    * token to submit responses
    */
    'token'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CcInweb': Components.CcInweb;
  }

  interface StencilIntrinsicElements {
    'cc-inweb': Components.CcInwebAttributes;
  }


  interface HTMLCcInwebElement extends Components.CcInweb, HTMLStencilElement {}
  var HTMLCcInwebElement: {
    prototype: HTMLCcInwebElement;
    new (): HTMLCcInwebElement;
  };

  interface HTMLElementTagNameMap {
    'cc-inweb': HTMLCcInwebElement
  }

  interface ElementTagNameMap {
    'cc-inweb': HTMLCcInwebElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
